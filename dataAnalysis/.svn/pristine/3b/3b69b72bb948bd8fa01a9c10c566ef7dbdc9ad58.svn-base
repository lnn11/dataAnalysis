<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	
	<!-- 属性配置 -->
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/dataAnalysis-properties.properties</value>
			</list>
		</property>
	</bean>

	<!-- 自动扫描服务 -->
	<context:component-scan base-package="com.zhb.dataAnalysis.marketing.service" />
	<context:component-scan base-package="com.zhb.dataAnalysis.finance.service" />
	<context:component-scan base-package="com.zhb.dataAnalysis.commodity.service" />
	 <context:component-scan base-package="com.zhb.dataAnalysis.common.shiro.model" />
	<context:component-scan base-package="com.zhb.dataAnalysis.common.shiro.service" />
	<context:component-scan base-package="com.zhb.dataAnalysis.common.shiro.authorized" />
	
	

	<bean name="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="22" /> <!--核心线程数 -->
		<property name="keepAliveSeconds" value="3000" /> <!-- 某线程空闲超过这个时间，就回收该线程 -->
		<property name="maxPoolSize" value="65" />     <!--最大线程数 -->
		<property name="queueCapacity" value="100" />  <!-- 队列大小 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$DiscardPolicy" />
		</property>
	</bean>
	<!-- 导入配置 -->
	<import resource="classpath:spring-repository.xml" />
	<!--<import resource="classpath:spring-commodity-service.xml" />
	<import resource="classpath:spring-finance-service.xml" />-->
	<!--<import resource="classpath:spring-marketing-service.xml" />-->
	<import resource="classpath:spring-shiro.xml" />
	<import resource="classpath:spring-shiro-service.xml"/>
</beans>
